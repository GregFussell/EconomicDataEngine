SQL Queries based on Questions:
x= area name
y= year

1. Fertility Rates
IF COMMUNITY:
select communities.name, sum(household.NOC)/(Count(*) / 2)
from person join household on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (PUMA = communityID and communities.year = household.year)
where communities.name = 'South Rhode Island--Washington County' and household.year = 2012
group by communities.name;

IF STATE:
select states.name, sum(household.NOC)/(Count(*) / 2)
from person join household on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (PUMA = communityID and communities.year = household.year)
  join states on (communities.BELONGSTO = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and household.year = 2012
group by states.name;
 
 4. Median Age vs. Property Value
 IF COMMUNITY:
select communities.name, Median(person.Agep)
from person join household on (person.serialNo = household.serialNo and  person.year = household.year)
  join communities on (PUMA = communityID and communities.year = household.year)
where communities.name = x and person.year = y
group by communities.name;
    
select communities.name, Avg(coalesce(household.VALP, 0))
from household join communities on (PUMA = communityID and communities.year = household.year)
where communities.name = 'South Rhode Island--Washington County' and household.year = 2012 and household.NP != 0
group by communities.name;

IF STATE:
select states.name, Median(person.Agep)
from person join household on (person.serialNo = household.serialNo and  person.year = household.year)
    join communities on (PUMA = communityID and communities.year = household.year) join states on 
    (communities.BELONGSTO = states.stateID and communities.year = states.year)
where states.name = x  and person.year = y
group by states.name;
      
select states.name, Avg(coalesce(household.VALP, 0))
from household join communities on (PUMA = communityID and communities.year = household.year) join states on 
  (communities.BELONGSTO = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and household.year = 2012 and household.NP != 0
group by states.name;

5. Languages
IF COMMUNITY:
select communities.name, Count(distinct person.LANP)
from person join HOUSEHOLD on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
where communities.name = 'South Rhode Island--Washington County' and person.year = 2012
group by communities.name;
    
IF STATE:
select states.name, Count(distinct person.LANP)
from person join HOUSEHOLD on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and person.year = 2012
group by states.name;

1. & 5. Economic Qrowth = Avg Income
IF COMMUNITY:
select communities.name, Avg(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  where income.year = 2015 and communities.name = 'South Rhode Island--Washington County'
  group by communities.name, household.serialNo), communities
where communities.name = 'South Rhode Island--Washington County' and communities.year = 2015
group by communities.name;
  
IF STATE:
select states.name, Avg(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
where income.year = 2015 and states.name = 'Rhode Island'
group by states.name, household.serialNo), states
where states.name = 'Rhode Island' and states.year = 2015
group by states.name;


3. Industry Growth vs Migration
IF COMMUNITY:
  select i1.communities.name, i1.industry.name, MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID))
  from (select * from ((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year) where communities.name = x and year = y) as i1, 
   (select * from ((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year) where communities.name = x and year = y) as i2
   where i1.industryID = i2.industryID
   having (Count(distinct i1.personalID) - Count(distinct i2.personalID)) = 
    MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID));
    
select communities.name, Count(mig)
from (person join household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on 
  (household.PUMA = communities.communityID and household.year= communities.year)
where communities.name = 'South Rhode Island--Washington County' and person.year = 2012 and mig = 2
group by communities.name;

 
IF STATE:
  select i1.states.name, i1.industry.name, MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID))
  from (select * from (((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year)) join states on (communities.belongsTo = states.stateID and 
   communities.year = states.year) where states.name = x and year = y) as i1, 
   (select * from (((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year)) join states on (communities.belongsTo = states.stateID and
   communities.year = states.year) where states.name = x and year = y) as i2
   where i1.industryID = i2.industryID
   having (Count(distinct i1.personalID) - Count(distinct i2.personalID)) = 
    MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID));

select states.name, Count(mig)
from ((person join household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on 
  (household.PUMA = communities.communityID and household.year= communities.year)) join states on (communities.belongsTo = 
  states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and person.year = 2012 and mig = 2
group by states.name;

2. Poverty
IF COMMUNITY:
  select communities.name, Count(distinct personalID)
  from ((income join person on (income.pID = person.personalID and income.year = person.year)) join household on (person.serialNo = 
    household.serialNo and person.year = household.year)) join communities on (household.isWithin = communities.communityID and 
    household.year = communities.year)
  where communities.name = x and year = y
  having povertyIncomeRatio < 100;
  
IF STATE:
  select states.name, Count(distinct personalID)
  from (((income join person on (income.pID = person.personalID and income.year = person.year)) join household on (person.serialNo = 
    household.serialNo and person.year = household.year)) join communities on (household.isWithin = communities.communityID and 
    household.year = communities.year)) join states on (communities.belongsTo = states.stateID and communities.year = states.year)
  where states.name = x and year = y
  having povertyIncomeRatio < 100;

OTHER QUERIES:

Most Widely Spoken Language:
IF COMMUNITY:
select communities.name, primarylanguage.name
from primarylanguage join person on languageID = person.lanp join household on 
    (person.serialNo = household.serialNo and person.year = household.year) join communities on 
    (household.PUMA = communities.communityID and household.year = communities.year)
where communities.name = 'South Rhode Island--Washington County' and communities.year = 2012
group by communities.name, primarylanguage.name
having Count(*) = (select Max(Count(*)) from (primarylanguage join person on languageID = 
person.lanp) join household on (person.serialNo = household.serialNo and person.year = household.year) 
join communities on (household.PUMA = communities.communityID and household.year = 
communities.year) where communities.name = 'South Rhode Island--Washington County' and 
communities.year = 2012 group by languageID);

IF STATE:
select states.name, primarylanguage.name
from primarylanguage join person on languageID = person.lanp join household on 
  (person.serialNo = household.serialNo and person.year = household.year) join communities on 
  (household.PUMA = communities.communityID and household.year = communities.year) join states on
  (communities.belongsTo = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and states.year = 2012
group by states.name, primarylanguage.name
having Count(*) = (select Max(Count(*)) from primarylanguage join person on languageID = person.lanp 
  join household on (person.serialNo = household.serialNo and person.year = household.year) join 
  communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
  where states.name = 'Rhode Island' and states.year = 2012 group by languageID);
  
Median Income
IF COMMUNITY:
select communities.name, Median(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  where income.year = 2015 and communities.name = 'South Rhode Island--Washington County'
  group by communities.name, household.serialNo), communities
where communities.name = 'South Rhode Island--Washington County' and communities.year = 2015
group by communities.name;
    
IF STATE:
select states.name, Median(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
where income.year = 2015 and states.name = 'Rhode Island'
group by states.name, household.serialNo), states
where states.name = 'Rhode Island' and states.year = 2015
group by states.name;

EDITED INDUSTRY GROWTH
select i1.name, INDUSTRY.name, i2.y - i1.x
from (select communities.name, industry.industryid, COUNT(industryid) x from industry join person on (industry.industryID = person.NAICSP) join
   household on (person.serialNo = household.serialNo and person.year = household.year) join communities on (household.PUMA =
   communities.communityID and household.year = communities.year) where communities.name = 'Lake County (North)' and person.year = 2012 group by communities.name, industry.INDUSTRYID)  i1,
   (select communities.name, industry.industryid,COUNT(industryID) y from (industry join person on (industry.industryID = person.NAICSP ) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.PUMA =
   communities.communityID and household.year = communities.year) where communities.name = 'Lake County (North)' and person.year = 2013 group by communities.name, industry.INDUSTRYID)  i2,
   industry
  where i1.industryID = i2.industryID and industry.industryid = i1.industryid;


--this is indsutry growth
--updated industry for state

with T as
(select * from communities, household, person, industry
where person.serialno=household.serialno
AND person.naicsp=industry.industryid
AND communities.communityid=household.puma
AND Household.year=person.year
AND communities.year=person.year
--AND communities.name= 'Alachua County (Central)--Gainesville City (Central)'
AND communities.year=2012
)--OR communities.year=2013)
,

X as
(select * from communities, household, person, industry
where person.serialno=household.serialno
AND person.naicsp=industry.industryid
AND communities.communityid=household.puma
AND Household.year=person.year
AND communities.year=person.year
--AND communities.name= 'Alachua County (Central)--Gainesville City (Central)'
AND communities.year=2013)

select n1 from ((select n1, n2, i2-i1 from (select iname n1, count(industryid)i1 from T group by industryid, iname)
, (select iname n2, count(industryid)i2 from X group by industryid, iname) where n1=n2) order by i2-i1 desc) 
where rownum = 1;



--updated industry for community
with T as
(select * from communities, household, person, industry
where person.serialno=household.serialno
AND person.naicsp=industry.industryid
AND communities.communityid=household.puma
AND Household.year=person.year
AND communities.year=person.year
AND communities.name= 'Alachua County (Central)--Gainesville City (Central)'
AND communities.year=2012
)--OR communities.year=2013)
,

X as
(select * from communities, household, person, industry
where person.serialno=household.serialno
AND person.naicsp=industry.industryid
AND communities.communityid=household.puma
AND Household.year=person.year
AND communities.year=person.year
AND communities.name= 'Alachua County (Central)--Gainesville City (Central)'
AND communities.year=2013)

select n1 from ((select n1, n2, i2-i1 from (select iname n1, count(industryid)i1 from T group by industryid, iname)
, (select iname n2, count(industryid)i2 from X group by industryid, iname) where n1=n2) order by i2-i1 desc) 
where rownum = 1;



--this spits out the number of households under the poverty line in a given community and year

with T AS (select * from income, household, communities
where income.iserialno=household.serialno
AND communities.communityid=household.puma
AND communities.year = income.year
AND household.year= income.year
AND communities.name = 'insert name here'
AND communities.year = 'insert year here'
)

 
--select (retirement+interest+wages+assist+ss+disability+sinc), iserialno 
select count(distinct iserialno)
from (select sum(retp) retirement, 
sum(intp) interest, 
sum(wagp) wages, 
sum(pap) assist, 
sum(ssp) ss, 
sum(ssip) disability, 
sum(semp)sinc,
np,
iserialno from T 
group by iserialno, np) 

where (retirement+interest+wages+assist+ss+disability+sinc)
< 
(POWER( np, 5)*3.7481 -
70.284 * power(np,4) +
413.55 * power(np,3) 
- 609.44 * power(np,2) +
2871.7*np + 9144.7);
